/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode head = null;
            ListNode current = null;
            while (l1 != null || l2 != null) {
                int count;
                if (l1 == null) {
                    count = l2.val;
                } else if (l2 == null) {
                    count = l1.val;
                } else {
                    count = l1.val + l2.val;
                }

                if (count >= 10) {
                    count = count - 10;

                    if (l1 != null && l1.next != null) {
                        l1.next.val += 1;
                    } else if (l2 != null && l2.next != null) {
                        l2.next.val += 1;
                    } else if (l1 != null) {
                        l1.next = new ListNode(1);
                    } else if (l2 != null) {
                        l2.next = new ListNode(1);
                    }
                }

                if (head == null) {
                    current = head = new ListNode(count);
                } else {
                    current.next = new ListNode(count);
                    current = current.next;
                }

                l1 = l1 != null ? l1.next : null;
                l2 = l2 != null ? l2.next : null;
            }

            return head;
    }
}
